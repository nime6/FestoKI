{
	"nodes":[
		{"id":"211dbcdc19b17d8e","type":"group","x":-520,"y":-600,"width":1530,"height":840,"label":"Main-Branch ungeschützt"},
		{"id":"8128549b4a76f20a","type":"text","text":"**Main**\n\nDaten -> 3206 Bilder\n","x":-480,"y":-180,"width":240,"height":80},
		{"id":"a62b618318b8379a","type":"text","text":"**Main**\nDaten -> 3206 Bilder\ndvc init \ndvc data\ndvc puch\n","x":-140,"y":-220,"width":240,"height":160},
		{"id":"cf873fcac56981e7","type":"text","text":"**split_data**\n- train\n- test\n** Diese sind getracked","x":-171,"y":-440,"width":303,"height":160},
		{"id":"58dc243c81c757ff","type":"text","text":"Dataset_umstruktur\n","x":-146,"y":64,"width":250,"height":60},
		{"id":"5c48bf6dcc53cf5e","type":"text","text":"Main- Branch geschützt ","x":177,"y":-40,"width":240,"height":50,"color":"1"},
		{"id":"0ae9d2ea4c7e3735","type":"text","text":"**CLIP**\n- Bilder wieder in der originalen Namen bekommen \n- Bild mit dem trackenden Bilder vergleichen und die tracked Bilder behalten","x":303,"y":-561,"width":375,"height":281},
		{"id":"7c4dc805334e7549","type":"text","text":"Main \nDaten -> 3206 Bilder und 3206 class.txt \n","x":366,"y":-220,"width":250,"height":160},
		{"id":"99a88721421ad4eb","type":"text","text":"Data Versionierung: Es wurde hier so gemacht, dass ein Branch \"CLIP\" erstellt wurde. Zuerst wurde ein Tag erstellt. Dieser Tag ist wie ein Screenshot, der zeigt, wie die Daten und die Struktur der Daten zu diesem Zeitpunkt waren. Damit kann ich, egal was in der Zukunft passieren wird, zu diesem Zustand zurückkehren.\n\n- `git tag -a original_data -m \"\"`\n\nMit diesem Befehl wurde der Tag erstellt. In diesem Tag gibt es eine .dvc-Datei, die die Metadaten für die Daten enthält. Wenn `git checkout <tagname>` eingetippt wird, geht man zu diesem Zustand zurück. Um jedoch die Daten in dem Zustand zu erhalten, wie sie zu diesem Zeitpunkt waren, muss `dvc checkout` eingegeben werden. Hiermit geht DVC zur .dvc-Datei und regeneriert den Zustand der Daten.\n\nEin Tag ist kein Branch, sondern nur ein Zustand. Wenn in einem Zustand Änderungen durchgeführt werden, müssen diese in einem Branch gespeichert werden, sonst werden sie nicht gespeichert.","x":1010,"y":-1520,"width":1240,"height":420,"color":"2"},
		{"id":"4eaac170b20d1c81","type":"text","text":"Tag original_data erstellen","x":760,"y":-480,"width":250,"height":60},
		{"id":"0528e8cf0251c2dd","type":"text","text":"**Majd**\n- train: 533 Bilder untracked\n- test: 10 Bilder untracked ","x":-550,"y":600,"width":370,"height":120},
		{"id":"1c159a305514062c","type":"text","text":"Model CLIP trainiert ","x":356,"y":625,"width":250,"height":70},
		{"id":"827faf76c54fa548","type":"text","text":"Bilder umbenannt ","x":-19,"y":630,"width":250,"height":60},
		{"id":"2c9c8d85767d51c4","type":"text","text":"Model ResNet18 wurde mit split_data trainiert","x":-140,"y":-800,"width":250,"height":60},
		{"id":"000cbe7e88bb2792","type":"text","text":"- git tag\n- git checkout tagsname\n- dvc checkout","x":1270,"y":-1240,"width":360,"height":120},
		{"id":"7d69d3d41856f510","type":"text","text":"Nächster Schritt: Beschreibungen für alle Bilder erstellen und speichern. Diese werden als Beschreibung.txt zusammen mit der class.txt und dem Bild gespeichert.","x":1060,"y":-462,"width":560,"height":85,"color":"4"},
		{"id":"69255a7a1cd316b1","x":1090,"y":-170,"width":250,"height":60,"type":"text","text":""},
		{"id":"851465038dd02794","x":-1206,"y":-848,"width":560,"height":540,"type":"text","text":"**Schritte zur Anwendung von Git und DVC**\n\n1. `git init` -> initialisiert ein Repository (oder es kann geklont werden)\n2. `dvc init` -> initialisiert DVC\n3. `dvc add <Dein_Datensatz>` -> trackt die Daten mit DVC\n4. `git add <Dein_Datensatz>.dvc .gitignore` -> fügt die .dvc-Datei und .gitignore zur Staging-Area hinzu\n\n*Es ist wichtig, .gitignore zu stagen und später zu committen, da dies dafür sorgt, dass die eigentlichen Daten nicht von Git getrackt werden.\n\n6. `git commit -m \"<Deine_Nachricht>\"`\n7. `git push`\n8. `dvc push`\n\n"},
		{"id":"b468b03f9492ef15","x":-1206,"y":-308,"width":560,"height":216,"type":"text","text":"**Schritte, um ein Repository mit den Daten zu pullen**\n\n1. `git clone <repository-url>` (Wenn das Repository vorher noch nicht geklont wurde)\n2. `git pull`\n3. `dvc pull` \n\n\n\n"},
		{"id":"63efebb36aea2f47","x":-1719,"y":-848,"width":513,"height":480,"color":"1","type":"text","text":"DVC vs. Git\n\nGit ist gut für Code und kleine Dateien geeignet. Bei großen Datenmengen kommt es jedoch zu Verzögerungen von Git. Wenn zum Beispiel ein Bild bearbeitet wird, wird ein neues Bild gespeichert. Das bedeutet, Git verfolgt nicht die Änderungen der Daten selbst, sondern behandelt sie als neue Dateien.\nGit ist differenzbasiert (inkrementell). Es arbeitet gut mit Textdateien, da es den Unterschied (Delta) zwischen Versionen berechnen kann.\nBei binären Daten (Bilder, Videos) kann das Delta nicht berechnet werden, hier werden die Daten komplett erneut gespeichert.\nDVC arbeitet auf Datei-Ebene und speichert jede Version komplett, ähnlich wie Git bei Binärdateien"}
	],
	"edges":[
		{"id":"8d83e3280502b37b","fromNode":"8128549b4a76f20a","fromSide":"right","toNode":"a62b618318b8379a","toSide":"left"},
		{"id":"41f21c622ef76f68","fromNode":"8128549b4a76f20a","fromSide":"bottom","toNode":"0528e8cf0251c2dd","toSide":"top"},
		{"id":"6ec5b6e29b2b2a5f","fromNode":"a62b618318b8379a","fromSide":"top","toNode":"cf873fcac56981e7","toSide":"bottom"},
		{"id":"043d165a4ed27f49","fromNode":"a62b618318b8379a","fromSide":"right","toNode":"7c4dc805334e7549","toSide":"left"},
		{"id":"0fe5f82f8f789923","fromNode":"a62b618318b8379a","fromSide":"bottom","toNode":"58dc243c81c757ff","toSide":"top"},
		{"id":"a66293b54c3fc81c","fromNode":"cf873fcac56981e7","fromSide":"left","toNode":"58dc243c81c757ff","toSide":"left"},
		{"id":"73ff003b2c9f21e3","fromNode":"58dc243c81c757ff","fromSide":"right","toNode":"7c4dc805334e7549","toSide":"bottom"},
		{"id":"471e77a5ed310ebe","fromNode":"cf873fcac56981e7","fromSide":"top","toNode":"2c9c8d85767d51c4","toSide":"bottom"},
		{"id":"f5741274714bdfa6","fromNode":"0528e8cf0251c2dd","fromSide":"right","toNode":"827faf76c54fa548","toSide":"left"},
		{"id":"3ebcd850dc315bcd","fromNode":"827faf76c54fa548","fromSide":"right","toNode":"1c159a305514062c","toSide":"left"},
		{"id":"c02564f5faf20229","fromNode":"7c4dc805334e7549","fromSide":"top","toNode":"0ae9d2ea4c7e3735","toSide":"bottom"},
		{"id":"05779919ecb1f98f","fromNode":"827faf76c54fa548","fromSide":"top","toNode":"0ae9d2ea4c7e3735","toSide":"left"},
		{"id":"9e56cb5ace62e5d3","fromNode":"99a88721421ad4eb","fromSide":"left","toNode":"4eaac170b20d1c81","toSide":"top"},
		{"id":"0a24978e8e432175","fromNode":"0ae9d2ea4c7e3735","fromSide":"right","toNode":"7d69d3d41856f510","toSide":"left"},
		{"id":"2d52ec55f7540930","fromNode":"7c4dc805334e7549","fromSide":"right","toNode":"69255a7a1cd316b1","toSide":"left"}
	]
}